{"version":3,"sources":["webpack:///src/app/registration/consumer/consumer.component.ts","webpack:///src/app/registration/consumer/consumer.component.html","webpack:///src/app/registration/consumer/consumer.service.ts","webpack:///src/app/registration/membership/membership.component.ts","webpack:///src/app/registration/membership/membership.component.html","webpack:///src/app/registration/membership/membership.service.ts","webpack:///src/app/registration/register-view/register-view.component.ts","webpack:///src/app/registration/register-view/register-view.component.html","webpack:///src/app/registration/registration-routing.module.ts","webpack:///src/app/registration/registration.module.ts","webpack:///src/app/shared/service/api-service.service.ts"],"names":["value","ConsumerComponent","router","formBuilder","conService","config","modalService","spinner","selectedLanguage","title","modalHeader","modalContent","fieldLabelen","name","NRIC_no","marital_status","gender","status","race","country","passport_no","mobile","whatsapp","email","address","town","state","postal_code","preffered_communication","type_of_buusiness","profession","income_net","accept","mStatus","text","genderOption","universalOption","preferredOption","backdrop","keyboard","centered","size","buildConsumerForm","newValue","console","log","consumerForm","group","required","pattern","spices","show","addConsumer","subscribe","data","consumerDetails","error","hide","success","openConfirmationModal","confirmation","dismissAll","navigate","reset","open","content","controls","onChange","openModal","onReset","selector","templateUrl","styleUrls","ConsumerService","apiService","postParams","post","providedIn","pad","i","NgbTimeStringAdapter","split","hour","parseInt","minute","second","time","MembershipComponent","memService","ngbCalendar","dateAdapter","url","weekdays","educationalOption","typeOption","statusOption","birth_date","birth_day","birth_time","NRIC_new","NRIC_old","age","birth_religion","current_religion","mother_tongue","universal_status","continent","descendant","Education_level","fb","twitter","birth_place","birth_town","language_title","th_title","th_spoken","th_reading","th_writing","economic_title","economic_type","economic_Business_type","income_gross","income_other","employee_position","business_type","monthly_expense","adequate_income","health","general_knowledge","financial","hapiness","leadership","wish_economic_type","wish_income_mothly","wish_type_business","wish_type_employment","wish_aim","wish_title","status_title","upload_photo","choose_file","browse","proficiencyOption","buildRegisterForm","registerForm","patchValue","Date","f","getTime","addmember","memberDetails","event","target","files","reader","FileReader","readAsDataURL","onload","base64","result","toString","file","maxLength","malay_spoken","malay_reading","malay_writting","eng_spoken","eng_reading","eng_writting","chinees_spoken","chinees_reading","chinees_writting","tamil_spoken","tamil_reading","tamil_writting","provide","useClass","fileChange","addMember","providers","MembershipService","RegisterViewComponent","memberform","consumerform","routes","path","component","RegistrationRoutingModule","forChild","imports","exports","RegistrationModule","declarations","ApiServiceService","http","httpOptions","headers","ErrorEvent","message","JSON","stringify","pathUrl","get","apiUrl","setHeaders","pipe","handleError","postUrl","body","delUrl","putUrl","put"],"mappings":"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","file":"registration-registration-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ConsumerService } from './consumer.service';\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-consumer',\n  templateUrl: './consumer.component.html',\n  styleUrls: ['./consumer.component.scss']\n})\nexport class ConsumerComponent implements OnInit {\n\n  @ViewChild('confirmation') private confirmation;\n  consumerForm: FormGroup;\n  public selectedLanguage = 'en';\n  public title = 'CONSUMER APPLICATION FORM';\n  public modalHeader = 'REQUEST FOR ENCAPSULATION OF SPICES';\n  public modalContent = '<p>hereby make a request to AK Universal Healthcare, through AK Universal Concept, to encapsulate the spices for my easy consumption and personal use only.</p><p>As a consumer of AK Universal Concept, I am therefore making the above request on my own free will and will  not hold AK Universal Concept or AK Universal Healthcare liable on any matters whatsoever, should it arise, after  the encapsulation process.</p>';\n  public fieldLabelen = {\n    name: 'Name (as in NRIC)',\n    NRIC_no: 'NRIC No',\n    marital_status: 'Marital status',\n    gender: 'Gender',\n    status: 'Status',\n    race: 'Race',\n    country: 'Country (For Foreigner)',\n    passport_no: 'Passport No (For Foreigner)',\n    mobile: 'Mobile No.',\n    whatsapp: 'No. WhatsApp, No. (Home/ Office)',\n    email: 'Email',\n    address: 'Current residential address',\n    town: 'Town',\n    state: 'State',\n    postal_code: 'Postcode',\n    preffered_communication: 'Preferred communication',\n    type_of_buusiness: 'Type of Business (If do Business)',\n    profession: 'Profession',\n    income_net: 'Nett income per month',\n    accept: 'Accepting the encapsulation of spices'\n  };\n\n\n  public mStatus = [\n    {text: 'Married', value: 'married'},\n    {text: 'Single', value: 'single'},\n  ];\n  public genderOption = [\n    {text: 'Male', value: 'male'},\n    {text: 'Female', value: 'female'},\n  ];\n  public universalOption = [\n    {text: 'National (Native)', value: 'national'},\n    {text: 'Citizen (Immigrant)', value: 'citizen'},\n  ];\n\n  public preferredOption = [\n    {text: 'Mail', value: 'mail'},\n    {text: 'Email', value: 'email'},\n    {text: 'SMS', value: 'sms'},\n    {text: 'Telephone', value: 'tel'},\n    {text: 'WhatsApp', value: 'wa'},\n  ];\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private conService: ConsumerService,\n    config: NgbModalConfig,\n    private modalService: NgbModal,\n    private spinner: NgxSpinnerService\n  ) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n    config.centered = true;\n    config.size = 'l';\n   }\n\n  ngOnInit(): void {\n    this.buildConsumerForm();\n  }\n  onChange(newValue) {\n    console.log(newValue);\n    this.selectedLanguage = newValue;\n    if (newValue === 'en'){\n      this.modalHeader = 'REQUEST FOR ENCAPSULATION OF SPICES';\n      this.modalContent = '<p>hereby make a request to AK Universal Healthcare, through AK Universal Concept, to encapsulate the spices for my easy consumption and personal use only.</p><p>As a consumer of AK Universal Concept, I am therefore making the above request on my own free will and will  not hold AK Universal Concept or AK Universal Healthcare liable on any matters whatsoever, should it arise, after  the encapsulation process.</p>';\n      this.title = 'CONSUMER APPLICATION FORM';\n      this.fieldLabelen = {\n        name: 'Name (as in NRIC)',\n        NRIC_no: 'NRIC No',\n        marital_status: 'Marital status',\n        gender: 'Gender',\n        status: 'Status',\n        race: 'Race',\n        country: 'Country (For Foreigner)',\n        passport_no: 'Passport No (For Foreigner)',\n        mobile: 'Mobile No.',\n        whatsapp: 'No. WhatsApp, No. (Home/ Office)',\n        email: 'Email',\n        address: 'Current residential address',\n        town: 'Town',\n        state: 'State',\n        postal_code: 'Postcode',\n        preffered_communication: 'Preferred communication',\n        type_of_buusiness: 'Type of Business (If do Business)',\n        profession: 'Profession',\n        income_net: 'Nett income per month',\n        accept: 'Accepting the encapsulation of spices'\n      };\n      this.mStatus = [\n        {text: 'Married', value: 'married'},\n        {text: 'Single', value: 'single'},\n      ];\n      this.genderOption = [\n        {text: 'Male', value: 'male'},\n        {text: 'Female', value: 'female'},\n      ];\n      this.universalOption = [\n        {text: 'National (Native)', value: 'national'},\n        {text: 'Citizen (Immigrant)', value: 'citizen'},\n      ];\n      this.preferredOption = [\n        {text: 'Mail', value: 'mail'},\n        {text: 'Email', value: 'email'},\n        {text: 'SMS', value: 'sms'},\n        {text: 'Telephone', value: 'tel'},\n        {text: 'WhatsApp', value: 'wa'},\n      ];\n    }else if (newValue === 'ma'){\n      this.modalHeader = 'PERMINTAAN UNTUK MENGKAPSULKAN REMPAH / REQUEST FOR ENCAPSULATION OF SPICES';\n      this.modalContent = '<p>dengan ini membuat permintaan kepada AK Universal Healthcare melalui AK Universal Concept, untuk mengkapsulkan rempah, supaya mudah ditelan dan untuk kegunaan peribadi saya sahaja.</p><p>Sebagai pengguna AK Universal Concept, saya membuat permintaan ini atas kehendak saya sendiri dan tidak akan bertanggungjawabkan AK Universal Concept atau AK Universal Healthcare ke atas apa-apa perkara sekalipun, sekiranya ia timbul, selepas proses pengkapsulan</p><p>hereby make a request to AK Universal Healthcare, through AK Universal Concept, to encapsulate the spices for my easy consumption and personal use only.</p><p>As a consumer of AK Universal Concept, I am therefore making the above request on my own free will and will  not hold AK Universal Concept or AK Universal Healthcare liable on any matters whatsoever, should it arise, after  the encapsulation process.</p>';\n      this.title = 'BORANG PERMOHONAN PENGGUNA / CONSUMER APPLICATION FORM';\n      this.fieldLabelen = {\n        name: 'Nama (Seperti di Kad Pengenalan) / Name (as in NRIC)',\n        NRIC_no: 'No. Kad Pengenalan / NRIC No',\n        marital_status: 'Taraf Perkahwinan / Marital status',\n        gender: 'Jantina / Gender',\n        status: 'Taraf / Status',\n        race: 'Bangsa / Race',\n        country: 'Negara (Untuk Warga Asing) / Country (For Foreigner)',\n        passport_no: 'No. Pasport (Untuk Warga Asing) / Passport No (For Foreigner)',\n        mobile: 'No. Telefon Bimbit / Mobile No.',\n        whatsapp: 'No. WhatsApp, Alternatif (Rumah/ Pejabat) / No. WhatsApp, No. (Home/ Office)',\n        email: 'E-mel / Email',\n        address: 'Alamat Rumah Terkini / Current residential address',\n        town: 'Bandar / Town',\n        state: 'Negeri / State',\n        postal_code: 'Poskod / Postcode',\n        preffered_communication: 'Cara Berkomunikasi / Preferred communication',\n        type_of_buusiness: 'Jenis Perniagaan (Jika Berniaga) / Type of Business (If do Business)',\n        profession: 'Jawatan / Profession',\n        income_net: 'Pendapatan Bersih Sebulan / Nett income per month',\n        accept: 'Setuju menerima pengkapsulan rempah / Accepting the encapsulation of spices'\n      };\n      this.mStatus = [\n        {text: 'Berkahwin / Married', value: 'married'},\n        {text: 'Bujang / Single', value: 'single'},\n      ];\n      this.genderOption = [\n        {text: 'Lelaki / Male', value: 'male'},\n        {text: 'Perempuan / Female', value: 'female'},\n      ];\n      this.universalOption = [\n        {text: 'Nasional (Kelahiran Tanah Air) / National (Native)', value: 'national'},\n        {text: 'Warganegara (Pendatang) / Citizen (Immigrant)', value: 'citizen'},\n      ];\n      this.preferredOption = [\n        {text: 'Surat / Mail', value: 'mail'},\n        {text: 'E-mel / Email', value: 'email'},\n        {text: 'Khidmat Pesanan Ringkas / SMS', value: 'sms'},\n        {text: 'Telefon / Telephone', value: 'tel'},\n        {text: 'WhatsApp', value: 'wa'},\n      ];\n    }else     if (newValue === 'ch'){\n      this.modalHeader = '请求将香料胶囊化 / REQUEST FOR ENCAPSULATION OF SPICES';\n      this.modalContent = '<p>因个人需求，本人在此要求 AK Universal Healthcare 将香料压缩至胶囊内以便容易食用。本人在此申明，此要求纯属个人意愿。</p><p>如有任何后续问题，AK Universal Healthcare 将无需附上任何责任。</p><p>hereby make a request to AK Universal Healthcare, through AK Universal Concept, to encapsulate the spices for my easy consumption and personal use only.</p><p>As a consumer of AK Universal Concept, I am therefore making the above request on my own free will and will  not hold AK Universal Concept or AK Universal Healthcare liable on any matters whatsoever, should it arise, after  the encapsulation process.</p>';\n      this.title = '消費者 應用 形成 / CONSUMER APPLICATION FORM';\n      this.fieldLabelen = {\n        name: '名字 (身份证) / Name (as in NRIC)',\n        NRIC_no: '身份证号码 / NRIC No',\n        marital_status: '婚姻状况 / Marital status',\n        gender: '性别 / Gender',\n        status: '状态 / Status',\n        race: '种族 / Race',\n        country: '国家（外国人专用） / Country (For Foreigner)',\n        passport_no: '护照号码 （外国人专用） / Passport No (For Foreigner)',\n        mobile: '手机号码 / Mobile No.',\n        whatsapp: 'WhatsApp号码，其他 （居家/公司） / No. WhatsApp, No. (Home/ Office)',\n        email: '电邮 / Email',\n        address: '当前居住地址 / Current residential address',\n        town: '城市 / Town',\n        state: '州 / State',\n        postal_code: '邮政编码 / Postcode',\n        preffered_communication: '首选沟通 / Preferred communication',\n        type_of_buusiness: '生意类型（如果做生意） / Type of Business (If do Business)',\n        profession: '职业 / Profession',\n        income_net: '每月净收入 / Nett income per month',\n        accept: '接受香料胶囊化 / Accepting the encapsulation of spices'\n      };\n      this.mStatus = [\n        {text: '已婚 / Married', value: 'married'},\n        {text: '单身 / Single', value: 'single'},\n      ];\n      this.genderOption = [\n        {text: '男 / Male', value: 'male'},\n        {text: '女 / Female', value: 'female'},\n      ];\n      this.universalOption = [\n        {text: '国家（本地）/ National (Native)', value: 'national'},\n        {text: '公民（移民) / Citizen (Immigrant)', value: 'citizen'},\n      ];\n      this.preferredOption = [\n        {text: '邮件 / Mail', value: 'mail'},\n        {text: '电邮 / Email', value: 'email'},\n        {text: '短信 / SMS', value: 'sms'},\n        {text: '电话 / Telephone', value: 'tel'},\n        {text: 'WhatsApp', value: 'wa'},\n      ];\n    }\n      // ... do other stuff here ...\n  }\n\n\n    public buildConsumerForm(){\n      this.consumerForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        NRIC_no: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n        marital_status: ['', Validators.required],\n        gender: ['', Validators.required],\n        status: ['', Validators.required],\n        race: ['', Validators.required],\n        country: [''],\n        passport_no: [null],\n        mobile: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n        whatsapp: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\n        email: ['', Validators.email],\n        address: ['', Validators.required],\n        town: ['', Validators.required],\n        state: ['', Validators.required],\n        postal_code: [null, Validators.required],\n        preffered_communication: ['', Validators.required],\n        profession: ['', Validators.required],\n        income_net: [null, Validators.required],\n        spices: [null],\n        type_of_buusiness: ['']\n      });\n  }\n\n     // convenience getter for easy access to form fields\n   get f() { return this.consumerForm.controls; }\n\n   public addConsumer() {\n    console.log(this.consumerForm.value);\n    this.spinner.show();\n    this.conService.addConsumer(this.consumerForm.value).subscribe(\n      data => {\n        this.consumerDetails(data);\n      },\n      error => {\n        this.spinner.hide();\n        console.log(error);\n      }\n    );\n  }\n\n  private consumerDetails(data) {\n    this.spinner.hide();\n    console.log(data);\n    if (data.success){\n      this.openConfirmationModal(this.confirmation);\n    }\n  }\n\n  redirectToReg(){\n    this.modalService.dismissAll();\n    this.router.navigate(['/register']);\n\n  }\n\n   onReset(){\n    this.consumerForm.reset();\n  }\n\n  openConfirmationModal(confirmation){\n    this.modalService.open(confirmation);\n  }\n\n  openModal(content){\n    this.modalService.open(content);\n  }\n\n}\n","<section>\n    <div class=\"page_banner\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h4>{{this.title}}</h4>\n                </div>\n                <div class=\"col-md-6 \">\n                    <div class=\"form-group row flexAlign\">\n\n                        <div class=\"col-4\">\n                            <select class=\"form-control form-custom\" [(ngModel)]=\"selectedLanguage\"\n                                (ngModelChange)=\"onChange($event)\" name=\"sel2\">\n                                <option value=\"en\">English</option>\n                                <option value=\"ma\">Malay</option>\n                                <option value=\"ch\">Chinese</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n</section>\n<section class=\"con-form\">\n\n    <div class=\"container\">\n        <form [formGroup]=\"consumerForm\">\n            <div class=\"form-group\">\n                <label>{{this.fieldLabelen.name}}<span class=\"text-danger\">*</span></label>\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': f.name.errors && f.name.touched }\" />\n                <div *ngIf=\"f.name.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.name.errors.required\">{{this.fieldLabelen.name}} is required</div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.NRIC_no}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"NRIC_no\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.NRIC_no.errors && f.NRIC_no.touched }\" />\n                    <div *ngIf=\"f.NRIC_no.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.NRIC_no.errors.required\">{{this.fieldLabelen.NRIC_no}} is required</div>\n                        <div *ngIf=\"f.NRIC_no.errors.NRIC_no\">{{this.fieldLabelen.NRIC_no}} must be a valid one</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.marital_status}}<span class=\"text-danger\">*</span></label>\n                    <select formControlName=\"marital_status\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.marital_status.errors && f.marital_status.touched }\">\n                        <option *ngFor=\"let data of mStatus\" value=\"{{data.value}}\">{{data.text}}</option>\n                    </select>\n                    <div *ngIf=\"f.marital_status.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.marital_status.errors.required\">{{this.fieldLabelen.marital_status}} is required\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.gender}}<span class=\"text-danger\">*</span></label>\n                    <select formControlName=\"gender\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.gender.errors && f.gender.touched }\">\n                        <option *ngFor=\"let data of genderOption\" value=\"{{data.value}}\">{{data.text}}</option>\n                    </select>\n                    <div *ngIf=\"f.gender.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.gender.errors.required\">{{this.fieldLabelen.gender}} is required</div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.status}}<span class=\"text-danger\">*</span></label>\n                    <select formControlName=\"status\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.status.errors && f.status.touched }\">\n                        <option *ngFor=\"let data of universalOption\" value=\"{{data.value}}\">{{data.text}}</option>\n                    </select>\n                    <div *ngIf=\"f.status.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.status.errors.required\">{{this.fieldLabelen.status}} is required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.race}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"race\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.race.errors && f.race.touched }\" />\n                    <div *ngIf=\"f.race.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.race.errors.required\">{{this.fieldLabelen.race}} is required</div>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.country}}</label>\n                    <input type=\"text\" formControlName=\"country\" class=\"form-control\" />\n                </div>\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.passport_no}}</label>\n                    <input type=\"text\" formControlName=\"passport_no\" class=\"form-control\" />\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label>{{this.fieldLabelen.address}}<span class=\"text-danger\">*</span></label>\n                <input type=\"text\" formControlName=\"address\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': f.address.errors && f.address.touched }\" />\n                <div *ngIf=\"f.address.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.address.errors.required\">{{this.fieldLabelen.address}} is required</div>\n\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.town}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"town\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.town.errors && f.town.touched }\" />\n                    <div *ngIf=\"f.town.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.town.errors.required\">{{this.fieldLabelen.town}} is required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.state}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"state\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.state.errors && f.state.touched }\" />\n                    <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.state.errors.required\">{{this.fieldLabelen.state}} is required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.postal_code}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"postal_code\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.postal_code.errors && f.postal_code.touched }\" />\n                    <div *ngIf=\"f.postal_code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.postal_code.errors.required\">{{this.fieldLabelen.postal_code}} is required</div>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.whatsapp}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"whatsapp\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.whatsapp.errors && f.whatsapp.touched }\" />\n                    <div *ngIf=\"f.whatsapp.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.whatsapp.errors.required\">{{this.fieldLabelen.whatsapp}} is required</div>\n                        <div *ngIf=\"f.whatsapp.errors.pattern\">{{this.fieldLabelen.whatsapp}} must be a valid one</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.mobile}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"mobile\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.mobile.errors && f.mobile.touched }\" />\n                    <div *ngIf=\"f.mobile.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.mobile.errors.required\">{{this.fieldLabelen.mobile}} is required</div>\n                        <div *ngIf=\"f.mobile.errors.pattern\">{{this.fieldLabelen.mobile}} must be a valid one</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.email}}</label>\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.email.errors && f.email.touched }\" />\n                    <div *ngIf=\"f.email.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.email.errors.email\">{{this.fieldLabelen.email}} must be a valid one</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.type_of_buusiness}}</label>\n                    <input type=\"text\" formControlName=\"type_of_buusiness\" class=\"form-control\" />\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.preffered_communication}}<span class=\"text-danger\">*</span></label>\n                    <select formControlName=\"preffered_communication\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.preffered_communication.errors && f.preffered_communication.touched }\">\n                        <option *ngFor=\"let data of preferredOption\" value=\"{{data.value}}\">{{data.text}}</option>\n                    </select>\n                    <div *ngIf=\"f.preffered_communication.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.preffered_communication.errors.required\">\n                            {{this.fieldLabelen.preffered_communication}} is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.profession}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"profession\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.profession.errors && f.profession.touched }\" />\n                    <div *ngIf=\"f.profession.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.profession.errors.required\">{{this.fieldLabelen.profession}} is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.income_net}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"income_net\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.income_net.errors && f.income_net.touched }\" />\n                    <div *ngIf=\"f.income_net.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.income_net.errors.required\">{{this.fieldLabelen.income_net}} is required</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" formControlName=\"spices\" type=\"checkbox\" value=\"\">\n                    <label class=\"form-check-label\">\n                        <span class=\"teamsread\" (click)=\"openModal(content)\">{{this.fieldLabelen.accept}}</span>\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"text-center\">\n                <button class=\"btn btn-primary mr-1 btn-custom\" [disabled]=\"this.consumerForm.invalid\"\n                    (click)=\"addConsumer()\">Register</button>\n                <button class=\"btn btn-secondary\" (click)=\"onReset()\">Cancel</button>\n            </div>\n        </form>\n    </div>\n</section>\n<section>\n    <ng-template #content let-c=\"close\" let-d=\"dismiss\">\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <div class=\"modal-header\">\n            {{this.modalHeader}}\n        </div>\n        <div class=\"modal-body\">\n            <div [innerHTML]=\"this.modalContent\"></div>\n        </div>\n\n    </ng-template>\n\n    <ng-template #confirmation let-c=\"close\" let-d=\"dismiss\">\n        <div class=\"modal-header\">\n            Thank you for registering with AKUC\n        </div>\n        <div class=\"modal-body\">\n            You have been successfully registered, you will be notified in the registered mobile number\n        </div>\n        <div class=\"modal-footer\">\n            <button class=\"btn btn-primary btn-custom\" (click)=\"redirectToReg()\">Thankyou</button>\n        </div>\n\n    </ng-template>\n</section>","import { Injectable } from '@angular/core';\nimport { ApiServiceService } from 'src/app/shared/service/api-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumerService {\n\n  constructor(private apiService: ApiServiceService) { }\n\n  public addConsumer(postParams){\n    return this.apiService.post('registerconsumer', postParams);\n  }\n}\n","import { Component, OnInit, Injectable, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MembershipService } from './membership.service';\nimport {NgbDateStruct, NgbCalendar, NgbDateAdapter, NgbTimeAdapter, NgbDateNativeAdapter, NgbTimeStruct, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { DatePipe } from '@angular/common';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\nconst pad = (i: number): string => i < 10 ? `0${i}` : `${i}`;\n@Injectable()\nexport class NgbTimeStringAdapter extends NgbTimeAdapter<string> {\n\n  fromModel(value: string| null): NgbTimeStruct | null {\n    if (!value) {\n      return null;\n    }\n    const split = value.split(':');\n    return {\n      hour: parseInt(split[0], 10),\n      minute: parseInt(split[1], 10),\n      second: parseInt(split[2], 10)\n    };\n  }\n\n  toModel(time: NgbTimeStruct | null): string | null {\n    return time != null ? `${pad(time.hour)}:${pad(time.minute)}:${pad(time.second)}` : null;\n  }\n}\n\n@Component({\n  selector: 'app-membership',\n  templateUrl: './membership.component.html',\n  styleUrls: ['./membership.component.scss'],\n  providers: [{ provide: NgbDateAdapter, useClass: NgbDateNativeAdapter },  {provide: NgbTimeAdapter, useClass: NgbTimeStringAdapter}]\n})\nexport class MembershipComponent implements OnInit {\n  @ViewChild('confirmation') private confirmation;\n  model: NgbDateStruct;\n  time: NgbTimeStruct;\n  registerForm: FormGroup;\n  url: any = '';\n  public weekdays = [\n    {text: 'Sunday', value: 'sunday'},\n    {text: 'Monday', value: 'monday'},\n    {text: 'Tuesday', value: 'tuesday'},\n    {text: 'Wednesday', value: 'wednesday'},\n    {text: 'Thursday', value: 'thursday'},\n    {text: 'Friday', value: 'friday'},\n    {text: 'Saturday', value: 'saturday'}\n  ];\n  public mStatus = [\n    {text: 'Married', value: 'married'},\n    {text: 'Single', value: 'single'},\n  ];\n  public genderOption = [\n    {text: 'Male', value: 'male'},\n    {text: 'Female', value: 'female'},\n  ];\n  public universalOption = [\n    {text: 'National (Native)', value: 'national'},\n    {text: 'Citizen (Immigrant)', value: 'citizen'},\n  ];\n  public educationalOption = [\n    {text: 'Primary', value: 'primary'},\n    {text: 'Secondary', value: 'sec'},\n    {text: 'Higher', value: 'hig'},\n    {text: 'Institute', value: 'inst'},\n    {text: 'College', value: 'coll'},\n    {text: 'University', value: 'uni'}\n  ];\n  public typeOption = [\n    {text: 'Business', value: 'business'},\n    {text: 'Employment', value: 'employment'},\n  ];\n  public statusOption = [\n    {text: 'Not Good', value: 'notgood'},\n    {text: 'Simple', value: 'simple'},\n    {text: 'Well', value: 'well'},\n    {text: 'Perfect', value: 'perfect'},\n  ];\n  public fieldLabelen = {\n    name: 'Official Name (As In NRIC)',\n    birth_date: 'Birth Date',\n    birth_day: 'Birth Day',\n    birth_time: 'Birth Time',\n    NRIC_new: 'NRIC No. (New)',\n    NRIC_old: 'NRIC No. (Old)',\n    marital_status: 'Marital status',\n    gender: 'Gender',\n    age: 'Age',\n    mobile: 'Personal Mobile No.',\n    whatsapp: 'WhatsApp No.',\n    birth_religion: 'Birth Religion',\n    current_religion: 'Current Religion',\n    mother_tongue: 'Mother Tongue',\n    universal_status: 'Universal Status',\n    continent: 'Continent',\n    descendant: 'Descendant',\n    Education_level: 'Education Level',\n    email: 'Email',\n    fb: 'FB',\n    twitter: 'Twitter',\n    address: 'Current Home Address',\n    town: 'Town',\n    state: 'State',\n    postal_code: 'Postcode',\n    birth_place: 'Place of Birth',\n    birth_town: 'Birth Town',\n    language_title: 'Language Proficiency',\n    th_title: 'Language',\n    th_spoken: 'Spoken',\n    th_reading: 'Reading',\n    th_writing: 'Writing',\n    economic_title: 'Economic Status',\n    economic_type: 'Economic Type',\n    economic_Business_type: 'Sole Proprietor or Partner (If do business)',\n    income_gross: 'Gross Monthly Income',\n    income_net: 'Nett Monthly Income',\n    income_other: 'Other Income',\n    employee_position: 'Position (If Employee)',\n    business_type: 'Type of Business',\n    monthly_expense: 'Current Monthly Expenses',\n    adequate_income: 'Adequate Income Monthly',\n    health: 'Health',\n    general_knowledge: 'General Knowledge',\n    financial: 'Financial',\n    hapiness: 'Hapiness',\n    leadership: 'Leadership',\n    wish_economic_type: 'Employment / Business',\n    wish_income_mothly: 'Monthly Income',\n    wish_type_business: 'Type of business',\n    wish_type_employment: 'Type of Employment',\n    wish_aim: 'Aim',\n    wish_title: 'Wish',\n    status_title: 'Life Status Now',\n    upload_photo: 'Upload Photo',\n    choose_file: 'Choose File',\n    browse : 'Browse'\n    };\n    public proficiencyOption = [\n      {text: 'Fluent', value: 'fluent'},\n      {text: 'Average', value: 'average'},\n      {text: 'Weak', value: 'weak'},\n      {text: 'Ignorance', value: 'ignorance'}\n    ];\n  public selectedLanguage = 'en';\n  public title = 'Member Application Form';\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private memService: MembershipService,\n    private modalService: NgbModal,\n    private spinner: NgxSpinnerService,\n    private ngbCalendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>\n    ) { }\n\n  ngOnInit(): void {\n    this.url = '';\n    this.buildRegisterForm();\n  }\n\n  redirectToReg(){\n    this.modalService.dismissAll();\n    this.router.navigate(['/register']);\n\n  }\n\n\n  onChange(newValue) {\n    console.log(newValue);\n    this.selectedLanguage = newValue;\n    if (newValue === 'en'){\n     this.registerForm.reset();\n     this.title = 'Member Application Form';\n     this.weekdays = [\n      {text: 'Sunday', value: 'sunday'},\n      {text: 'Monday', value: 'monday'},\n      {text: 'Tuesday', value: 'tuesday'},\n      {text: 'Wednesday', value: 'wednesday'},\n      {text: 'Thursday', value: 'thursday'},\n      {text: 'Friday', value: 'friday'},\n      {text: 'Saturday', value: 'saturday'}\n    ];\n     this.mStatus = [\n      {text: 'Married', value: 'married'},\n      {text: 'Single', value: 'single'},\n    ];\n     this.genderOption = [\n      {text: 'Male', value: 'male'},\n      {text: 'Female', value: 'female'},\n    ];\n     this.universalOption = [\n      {text: 'National (Native)', value: 'national'},\n      {text: 'Citizen (Immigrant)', value: 'citizen'},\n    ];\n     this.educationalOption = [\n      {text: 'Primary', value: 'primary'},\n      {text: 'Secondary', value: 'sec'},\n      {text: 'Higher', value: 'hig'},\n      {text: 'Institute', value: 'inst'},\n      {text: 'College', value: 'coll'},\n      {text: 'University', value: 'uni'}\n    ];\n     this.proficiencyOption = [\n      {text: 'Fluent', value: 'fluent'},\n      {text: 'Average', value: 'average'},\n      {text: 'Weak', value: 'weak'},\n      {text: 'Ignorance', value: 'ignorance'}\n    ];\n     this.typeOption = [\n      {text: 'Business', value: 'business'},\n      {text: 'Employment', value: 'employment'},\n    ];\n     this.statusOption = [\n      {text: 'Not Good', value: 'notgood'},\n      {text: 'Simple', value: 'simple'},\n      {text: 'Well', value: 'well'},\n      {text: 'Perfect', value: 'perfect'},\n    ];\n     this.fieldLabelen = {\n      name: 'Official Name (As In NRIC)',\n      birth_date: 'Birth Date',\n      birth_day: 'Birth Day',\n      birth_time: 'Birth Time',\n      NRIC_new: 'NRIC No. (New)',\n      NRIC_old: 'NRIC No. (Old)',\n      marital_status: 'Marital status',\n      gender: 'Gender',\n      age: 'Age',\n      mobile: 'Personal Mobile No.',\n      whatsapp: 'WhatsApp No.',\n      birth_religion: 'Birth Religion',\n      current_religion: 'Current Religion',\n      mother_tongue: 'Mother Tongue',\n      universal_status: 'Universal Status',\n      continent: 'Continent',\n      descendant: 'Descendant',\n      Education_level: 'Education Level',\n      email: 'Email',\n      fb: 'FB',\n      twitter: 'Twitter',\n      address: 'Current Home Address',\n      town: 'Town',\n      state: 'State',\n      postal_code: 'Postcode',\n      birth_place: 'Place of Birth',\n      birth_town: 'Birth Town',\n      language_title: 'Language Proficiency',\n      th_title: 'Language',\n      th_spoken: 'Spoken',\n      th_reading: 'Reading',\n      th_writing: 'Writing',\n      economic_title: 'Economic Status',\n      economic_type: 'Economic Type',\n      economic_Business_type: 'Sole Proprietor or Partner (If do business)',\n      income_gross: 'Gross Monthly Income',\n      income_net: 'Nett Monthly Income',\n      income_other: 'Other Income',\n      employee_position: 'Position (If Employee)',\n      business_type: 'Type of Business',\n      monthly_expense: 'Current Monthly Expenses',\n      adequate_income: 'Adequate Income Monthly',\n      health: 'Health',\n      general_knowledge: 'General Knowledge',\n      financial: 'Financial',\n      hapiness: 'Hapiness',\n      leadership: 'Leadership',\n      wish_economic_type: 'Employment / Business',\n      wish_income_mothly: 'Monthly Income',\n      wish_type_business: 'Type of business',\n      wish_type_employment: 'Type of Employment',\n      wish_aim: 'Aim',\n      wish_title: 'Wish',\n      status_title: 'Life Status Now',\n      upload_photo: 'Upload Photo',\n      choose_file: 'Choose File',\n      browse : 'Browse'\n     };\n    }else if (newValue === 'ma'){\n      this.registerForm.reset();\n      this.title = 'Borang Permohonan Ahli / Member Application Form';\n      this.weekdays = [\n        {text: 'Ahad / Sunday', value: 'sunday'},\n        {text: 'isnin / Monday', value: 'monday'},\n        {text: 'masanya / Tuesday', value: 'tuesday'},\n        {text: 'Rabu / Wednesday', value: 'wednesday'},\n        {text: 'Khamis / Thursday', value: 'thursday'},\n        {text: 'Jumaat / Friday', value: 'friday'},\n        {text: 'Sabtu / Sunday', value: 'saturday'}\n      ];\n      this.mStatus = [\n        {text: 'Berkahwin / Married', value: 'married'},\n        {text: 'Bujang / Single', value: 'single'},\n      ];\n      this.genderOption = [\n        {text: 'Lelaki / Male', value: 'male'},\n        {text: 'Perempuan / Female', value: 'female'},\n      ];\n      this.universalOption = [\n        {text: 'Nasional (Kelahiran Tanah Air) / National (Native)', value: 'national'},\n        {text: 'Warganegara (Pendatang) / Citizen (Immigrant)', value: 'citizen'},\n      ];\n      this.educationalOption = [\n        {text: 'Rendah / Primary', value: 'primary'},\n        {text: 'Menengah / Secondary', value: 'sec'},\n        {text: 'Tinggi / Higher', value: 'hig'},\n        {text: 'Institut / Institute', value: 'inst'},\n        {text: 'Kolej / College', value: 'coll'},\n        {text: 'Universiti / University', value: 'uni'}\n      ];\n      this.proficiencyOption = [\n        {text: 'Fasih / Fluent', value: 'fluent'},\n        {text: 'Sederhana / Average', value: 'average'},\n        {text: 'Lemah / Weak', value: 'weak'},\n        {text: 'Kejahilan / Ignorance', value: 'ignorance'}\n      ];\n      this.typeOption = [\n        {text: 'Berniaga / Business', value: 'business'},\n        {text: 'Bekerja / Employment', value: 'employment'},\n      ];\n      this.statusOption = [\n        {text: 'Kurang Baik / Not Good', value: 'notgood'},\n        {text: 'Sederhana / Simple', value: 'simple'},\n        {text: 'Baik / Well', value: 'well'},\n        {text: 'Sempurna / Perfect', value: 'perfect'},\n      ];\n      this.fieldLabelen = {\n        name: 'Nama Rasmi (seperti di kad pengenalan) / Official Name (As In NRIC)',\n        birth_date: 'Tarikh Kelahiran / Birth Date',\n        birth_day: 'Hari kelahiran / Birth Day',\n        birth_time: 'Waktu Kelahiran / Birth Time',\n        NRIC_new: 'No. KPPN (Baharu) / NRIC No. (New)',\n        NRIC_old: 'No. KPPN (Lama) / NRIC No. (Old)',\n        marital_status: 'Taraf Perkahwinan / Marital Status',\n        gender: 'Jantina / Gender',\n        age: 'Umur / Age',\n        mobile: 'No. Telefon Bimbit Peribadi / Personal Mobile No.',\n        whatsapp: 'No. WhatsApp / Whatsapp No.',\n        birth_religion: 'Agama asal / Birth Religion',\n        current_religion: 'Agama Kini / Current Religion',\n        mother_tongue: 'Bahasa Ibunda / Mother Tongue',\n        universal_status: 'Taraf Alam / Universal Status',\n        continent: 'Benua / Continent',\n        descendant: 'Keturunan / Descendant',\n        Education_level: 'Taraf Pendidikan / Education Level',\n        email: 'E-mel / Email',\n        fb: 'FB',\n        twitter: 'Twitter',\n        address: 'Alamat Kediaman Terkini / Current Home Address',\n        town: 'Bandar / Town',\n        state: 'Negeri / State',\n        postal_code: 'Poskod / Postcode',\n        birth_place: 'Berasal dari Negeri / Negara ( Tempat Lahir ) / Place of Birth',\n        birth_town: 'Bandar Kelahiran / Birth Town',\n        language_title: 'Penguasaan Bahasa / Language Proficiency',\n        th_title: 'Bahasa / Language',\n        th_spoken: 'BERTUTUR / Spoken',\n        th_reading: 'MEMBACA / Reading',\n        th_writing: 'MENULIS / Writing',\n        economic_title: 'Status Ekonomi',\n        economic_type: 'Bekerja atau Berniaga / Economic Type',\n        economic_Business_type: 'Pemilikan Tunggal atau Rakan Kongsi (Jika Berniaga) / Sole Proprietor or Partner (If do business).',\n        income_gross: 'Pendapatan Kasar Sebulan / Gross Monthly Income',\n        income_net: 'Pendapatan Bersih Sebulan / Nett Monthly Income',\n        income_other: 'Lain Lain Pendapatan / Other Income',\n        employee_position: 'Jawatan (Sekiranya anda seorang pekerja) / Position (If Employee)',\n        business_type: 'Jenis Perniagaan / Type of Business',\n        monthly_expense: 'Perbelanjaan Setiap bulan pada masa kini / Current Monthly Expenses',\n        adequate_income: 'Pendapatan yang mencukupi ( Setiap Bulan ) / Adequate Income Monthly',\n        health: 'Kesihatan / Health',\n        general_knowledge: 'Kesihatan / General Knowledge',\n        financial: 'Kewangan / Financial',\n        hapiness: 'Kebahagian / Hapiness',\n        leadership: 'Kepimpinan / Leadership',\n        wish_economic_type: 'Bekerja / Berniaga atau / Employment/ Business.',\n        wish_income_mothly: 'Pendapatan Sebulan / Monthly Income',\n        wish_type_business: 'Jenis Perniagaan / Type of business',\n        wish_type_employment: 'Jenis Pekerjaan / Type of Employment',\n        wish_aim: 'Berazam / Aim',\n        wish_title: 'Hasrat / Wish',\n        status_title: 'Status Kehidupan Pada Masa Kini / Life Status Now',\n        upload_photo: 'Muat Naik Gambar / Upload Photo',\n        choose_file: 'Pilih Fail / Choose File',\n        browse : 'Melayari / Browse'\n        };\n    }else if (newValue === 'ch'){\n      this.registerForm.reset();\n      this.title = '會員 應用 形成 / Member Application Form';\n      this.weekdays = [\n        {text: '星期天 / Sunday', value: 'sunday'},\n        {text: '星期一 / Monday', value: 'monday'},\n        {text: '星期二 / Tuesday', value: 'tuesday'},\n        {text: '星期三 / Wednesday', value: 'wednesday'},\n        {text: '星期四 / Thursday', value: 'thursday'},\n        {text: '星期五 / Friday', value: 'friday'},\n        {text: '星期六 / Sunday', value: 'saturday'}\n      ];\n      this.mStatus = [\n        {text: '已婚 / Married', value: 'married'},\n        {text: '单身 / Single', value: 'single'},\n      ];\n      this.genderOption = [\n        {text: '男 / Male', value: 'male'},\n        {text: '女 / Female', value: 'female'},\n      ];\n      this.universalOption = [\n        {text: '国家（本地）/ National (Native)', value: 'national'},\n        {text: '公民（移民) / Citizen (Immigrant)', value: 'citizen'},\n      ];\n      this.proficiencyOption = [\n        {text: '流利程度 / Fluent', value: 'fluent'},\n        {text: '平均 / Average', value: 'average'},\n        {text: '弱 / Weak', value: 'weak'},\n        {text: '不知 / Ignorance', value: 'ignorance'}\n      ];\n      this.educationalOption = [\n        {text: '小学 / Primary', value: 'primary'},\n        {text: '中学 / Secondary', value: 'sec'},\n        {text: '高等教育 / Higher', value: 'hig'},\n        {text: '研究所 / Institute', value: 'inst'},\n        {text: '学院 / College', value: 'coll'},\n        {text: '大学 / University', value: 'uni'}\n      ];\n      this.typeOption = [\n        {text: '生意 / Business', value: 'business'},\n        {text: '雇佣 / Employment', value: 'employment'},\n      ];\n      this.statusOption = [\n        {text: '不好 / Not Good', value: 'notgood'},\n        {text: '简单 / Simple', value: 'simple'},\n        {text: '好 / Well', value: 'well'},\n        {text: '完美 / Perfect', value: 'perfect'},\n      ];\n      this.fieldLabelen = {\n        name: '姓名（与您的身份证相同）/ Official Name (As In NRIC)',\n        birth_date: '出生日期 / Birth Date',\n        birth_day: '生日 / Birth Day',\n        birth_time: '出生时间 / Birth Time',\n        NRIC_new: '身份证号码（新）/ NRIC No. (New)',\n        NRIC_old: '身份证号码（旧）/ NRIC No. (Old)',\n        marital_status: '婚姻状况 / Marital status',\n        gender: '性别 / Gender',\n        age: '年龄 / Age',\n        mobile: '个人手机号码 / Personal Mobile No.',\n        whatsapp: 'Whatsapp 号码 / WhatsApp No.',\n        birth_religion: '出生宗教 / Birth Religion',\n        current_religion: '当前宗教 / Current Religion',\n        mother_tongue: '母语 / Mother Tongue',\n        universal_status: '普遍地位 / Universal Status',\n        continent: '大陆 / Continent',\n        descendant: '后裔 / Descendant',\n        Education_level: '学历 / Education Level',\n        email: '电邮 / Email',\n        fb: '面子书 / FB',\n        twitter: '推特 / Twitter',\n        address: '当前家庭住址 / Current Home Address',\n        town: '城市 / Town',\n        state: '州 / State',\n        postal_code: '邮政编码 / Postcode',\n        birth_place: '出生地 / Place of Birth',\n        birth_town: '出生城市 / Birth Town',\n        language_title: '语言能力 / Language Proficiency',\n        th_title: '语言 / Language',\n        th_spoken: '会话 / Spoken',\n        th_reading: '阅读 / Reading',\n        th_writing: '写作 / Writing',\n        economic_title: 'Economic Status',\n        economic_type: '经济类型 / Economic Type',\n        economic_Business_type: '业务类型 / Sole Proprietor or Partner (If do business)',\n        income_gross: '每月总收入 / Gross Monthly Income',\n        income_net: '每月净收入 / Nett Monthly Income',\n        income_other: '其他的收入 / Other Income',\n        employee_position: '职位名称（如果您是员工）/ Position (If Employee)',\n        business_type: 'Type of Business',\n        monthly_expense: '当前每月费用 / Current Monthly Expenses',\n        adequate_income: '每月足够收入 / Adequate Income Monthly',\n        health: '健康 / Health',\n        general_knowledge: '基本知识 / General Knowledge',\n        financial: '金融 / Financial',\n        hapiness: '幸福程度 / Hapiness',\n        leadership: '领导能力 / Leadership',\n        wish_economic_type: '经济类型 / Employment / Business',\n        wish_income_mothly: '每月收入 / Monthly Income',\n        wish_type_business: '业务类型 / Type of business',\n        wish_type_employment: '工作类型 / Type of Employment',\n        wish_aim: '目标 / Aim',\n        wish_title: '愿望 / Wish',\n        status_title: '当前生活状态 / Life Status Now',\n        upload_photo: '上传照片 / Upload Photo',\n        choose_file: '选择文件 / Choose File',\n        browse : '浏览 / Browse'\n       };\n    }\n      // ... do other stuff here ...\n  }\n\n  openConfirmationModal(confirmation){\n    this.modalService.open(confirmation);\n  }\n\n  public addMember() {\n    this.spinner.show();\n\n    this.registerForm.patchValue({\n      birth_date: new Date(this.f.birth_date.value).getTime()\n    });\n\n    this.memService.addmember(this.registerForm.value).subscribe(\n      data => {\n        this.memberDetails(data);\n      },\n      error => {\n        this.spinner.hide();\n        console.log(error);\n      }\n    );\n  }\n\n  private memberDetails(data) {\n    this.spinner.hide();\n    console.log(data);\n    if (data.success){\n      this.openConfirmationModal(this.confirmation);\n    }\n  }\n\n\n  fileChange(event) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n      // tslint:disable-next-line: no-shadowed-variable\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        let base64 =  reader.result.toString();\n\n        base64 = base64.split(';')[1].split(',')[1];\n\n        this.registerForm.patchValue({\n          file: base64\n       });\n\n\n        console.log(event.target.result);\n        this.url = event.target.result;\n      };\n    }\n  }\n\n\n  public buildRegisterForm(){\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      birth_date: [null, Validators.required],\n      birth_day: ['', Validators.required],\n      birth_time: [null, [Validators.required, Validators.pattern(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/)]],\n      NRIC_new: [null, [Validators.required, Validators.maxLength(12), Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      NRIC_old: [null, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)],\n      marital_status: [null, Validators.required],\n      gender: [null, Validators.required],\n      age: [null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      mobile: [null, [Validators.required, Validators.pattern(/^-?([0-9]\\d*)?$/)]],\n      whatsapp: [null, [Validators.required, Validators.pattern(/^-?([0-9]\\d*)?$/)]],\n      birth_religion: ['', Validators.required],\n      current_religion: ['', Validators.required],\n      mother_tongue: ['', Validators.required],\n      universal_status: [null, Validators.required],\n      continent: ['', Validators.required],\n      descendant: ['', Validators.required],\n      Education_level: [null, Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      fb: [''],\n      twitter: [''],\n      address: ['', Validators.required],\n      town: ['', Validators.required],\n      state: ['', Validators.required],\n      postal_code: [null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      birth_place: ['', Validators.required],\n      birth_town: ['', Validators.required],\n      malay_spoken: [null],\n      malay_reading: [null],\n      malay_writting: [null],\n      eng_spoken: [null],\n      eng_reading: [null],\n      eng_writting: [null],\n      chinees_spoken: [null],\n      chinees_reading: [null],\n      chinees_writting: [null],\n      tamil_spoken: [null],\n      tamil_reading: [null],\n      tamil_writting: [null],\n      economic_type: [null, Validators.required],\n      employee_position: [''],\n      business_type: [''],\n      economic_Business_type: [''],\n      income_gross: [null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      income_net: [null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      income_other: [null, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)],\n      monthly_expense: [null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      adequate_income: [null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      health: [null, Validators.required],\n      general_knowledge: [null, Validators.required],\n      financial: [null, Validators.required],\n      hapiness: [null, Validators.required],\n      leadership: [null, Validators.required],\n      wish_economic_type: [''],\n      wish_income_mothly: [null, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)],\n      wish_type_business: [''],\n      wish_type_employment: [''],\n      wish_aim: [''],\n      file: ['']\n    });\n  }\n\n   // convenience getter for easy access to form fields\n   get f() { return this.registerForm.controls; }\n\n   onReset(){\n    this.registerForm.reset();\n  }\n}\n","<section>\n    <div class=\"page_banner\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-6 col-xs-12\">\n                    <h4>{{this.title}}</h4>\n                </div>\n                <div class=\"col-md-6 col-xs-12\">\n                    <div class=\"form-group row flexAlign\">\n\n                        <div class=\"col-4\">\n                            <select class=\"form-control form-custom\" [(ngModel)]=\"selectedLanguage\"\n                                (ngModelChange)=\"onChange($event)\" name=\"sel2\">\n                                <option value=\"en\">English</option>\n                                <option value=\"ma\">Malay</option>\n                                <option value=\"ch\">Chinese</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n</section>\n<section class=\"mem-form\">\n\n    <div class=\"container\">\n        <form [formGroup]=\"registerForm\">\n            <div class=\"form-row\">\n                <div class=\"col-md-9\">\n                    <div class=\"form-group\">\n                        <label>{{this.fieldLabelen.name}}<span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': f.name.errors && f.name.touched }\" />\n                        <div *ngIf=\"f.name.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.name.errors.required\">{{this.fieldLabelen.name}} is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4 col-sm-12\">\n                            <label>{{this.fieldLabelen.birth_date}}<span class=\"text-danger\">*</span></label>\n                            <div class=\"input-group\"\n                                [ngClass]=\"{ 'is-invalid': f.birth_date.errors && f.birth_date.touched }\">\n                                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" formControlName=\"birth_date\"\n                                    name=\"dp\" [(ngModel)]=\"model\" ngbDatepicker #d=\"ngbDatepicker\"\n                                    [ngStyle]=\"{ 'border-color':f.birth_date.errors && f.birth_date.touched ? 'red' : '#ced4da' }\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\"\n                                        type=\"button\"></button>\n                                </div>\n                            </div>\n                            <div *ngIf=\"f.birth_date.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.birth_date.errors.required\">{{this.fieldLabelen.birth_date}} is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4 col-sm-12\">\n                            <label>{{this.fieldLabelen.birth_day}}<span class=\"text-danger\">*</span></label>\n                            <select formControlName=\"birth_day\" class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': f.birth_day.errors && f.birth_day.touched }\">\n                                <option *ngFor=\"let day of weekdays\" value=\"{{day.value}}\">{{day.text}}</option>\n                            </select>\n                            <div *ngIf=\"f.birth_day.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.birth_day.errors.required\">{{this.fieldLabelen.birth_day}} is required\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4 col-sm-12\">\n                            <label>{{this.fieldLabelen.birth_time}}<span class=\"text-danger\">* </span>\n                                <small>(Example 14:00)</small></label>\n\n                            <input type=\"text\" formControlName=\"birth_time\" class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': f.birth_time.errors && f.birth_time.touched }\" />\n\n                            <div *ngIf=\"f.birth_time.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.birth_time.errors.required\">{{this.fieldLabelen.birth_time}} is required\n                                </div>\n                                <div *ngIf=\"f.birth_time.errors.pattern\">{{this.fieldLabelen.birth_time}} is not valid\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-6 col-sm-12\">\n                            <label>{{this.fieldLabelen.NRIC_new}}<span class=\"text-danger\">*</span></label>\n                            <input type=\"text\" formControlName=\"NRIC_new\" class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': f.NRIC_new.errors && f.NRIC_new.touched }\" maxlength=\"12\" />\n                            <div *ngIf=\"f.NRIC_new.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.NRIC_new.errors.required\">{{this.fieldLabelen.NRIC_new}} is required</div>\n                                <div *ngIf=\"f.NRIC_new.errors.maxlength\">{{this.fieldLabelen.NRIC_new}} must be\n                                    12 digits</div>\n                                <div *ngIf=\"f.NRIC_new.errors.pattern\">{{this.fieldLabelen.NRIC_new}} is not valid\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6 col-sm-12\">\n                            <label>{{this.fieldLabelen.NRIC_old}}</label>\n                            <input type=\"text\" formControlName=\"NRIC_old\" class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': f.NRIC_old.errors && f.NRIC_old.touched }\" maxlength=\"12\" />\n                            <div *ngIf=\"f.NRIC_old.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.NRIC_old.errors.pattern\">{{this.fieldLabelen.NRIC_old}} is not valid\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4 col-sm-12\">\n                            <label>{{this.fieldLabelen.marital_status}}<span class=\"text-danger\">*</span></label>\n                            <select formControlName=\"marital_status\" class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': f.marital_status.errors && f.marital_status.touched }\">\n                                <option *ngFor=\"let data of mStatus\" value=\"{{data.value}}\">{{data.text}}</option>\n                            </select>\n                            <div *ngIf=\"f.marital_status.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.marital_status.errors.required\">{{this.fieldLabelen.marital_status}} is\n                                    required</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4 col-sm-12\">\n                            <label>{{this.fieldLabelen.gender}}<span class=\"text-danger\">*</span></label>\n                            <select formControlName=\"gender\" class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': f.gender.errors && f.gender.touched }\">\n                                <option *ngFor=\"let data of genderOption\" value=\"{{data.value}}\">{{data.text}}</option>\n                            </select>\n                            <div *ngIf=\"f.gender.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gender.errors.required\">{{this.fieldLabelen.gender}} is required</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-4 col-sm-12\">\n                            <label>{{this.fieldLabelen.age}}<span class=\"text-danger\">*</span></label>\n                            <input type=\"text\" formControlName=\"age\" class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': f.age.errors && f.age.touched }\" maxlength=\"3\" />\n                            <div *ngIf=\"f.age.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.age.errors.required\">{{this.fieldLabelen.age}} is required</div>\n                                <div *ngIf=\"f.age.errors.pattern\">{{this.fieldLabelen.age}} is not valid\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label>{{this.fieldLabelen.upload_photo}}<span class=\"text-danger\">*</span></label>\n                        <div class=\"custom-file\">\n                            <input type=\"file\" (change)=\"fileChange($event)\" class=\"form-control custom-file-input\"\n                                id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\">\n                            <label class=\"form-control custom-file-label\"\n                                for=\"inputGroupFile01\">{{this.fieldLabelen.choose_file}}<span\n                                    class=\"text-danger\">*</span></label>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <img [src]=this.url class=\"img-thumbnail\" alt=\"upload you image\" />\n                    </div>\n\n                </div>\n            </div>\n\n\n\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.whatsapp}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"whatsapp\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.whatsapp.errors && f.whatsapp.touched }\" maxlength=\"12\" />\n                    <div *ngIf=\"f.whatsapp.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.whatsapp.errors.required\">{{this.fieldLabelen.whatsapp}} is required</div>\n                        <div *ngIf=\"f.whatsapp.errors.pattern\">{{this.fieldLabelen.whatsapp}} is not valid\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.mobile}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"mobile\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.mobile.errors && f.mobile.touched }\" maxlength=\"12\" />\n                    <div *ngIf=\"f.mobile.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.mobile.errors.required\">{{this.fieldLabelen.mobile}} is required</div>\n                        <div *ngIf=\"f.mobile.errors.pattern\">{{this.fieldLabelen.mobile}} is not valid\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.birth_religion}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"birth_religion\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.birth_religion.errors && f.birth_religion.touched }\" />\n                    <div *ngIf=\"f.birth_religion.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.birth_religion.errors.required\">{{this.fieldLabelen.birth_religion}} is required\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.current_religion}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"current_religion\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.current_religion.errors && f.current_religion.touched }\" />\n                    <div *ngIf=\"f.current_religion.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.current_religion.errors.required\">{{this.fieldLabelen.current_religion}} is\n                            required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.mother_tongue}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"mother_tongue\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.mother_tongue.errors && f.mother_tongue.touched }\" />\n                    <div *ngIf=\"f.mother_tongue.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.mother_tongue.errors.required\">{{this.fieldLabelen.mother_tongue}} is required\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.universal_status}}<span class=\"text-danger\">*</span></label>\n                    <select formControlName=\"universal_status\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.universal_status.errors && f.universal_status.touched }\">\n                        <option *ngFor=\"let data of universalOption\" value=\"{{data.value}}\">{{data.text}}</option>\n                    </select>\n                    <div *ngIf=\"f.universal_status.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.universal_status.errors.required\">{{this.fieldLabelen.universal_status}} is\n                            required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.continent}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"continent\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.continent.errors && f.continent.touched }\" />\n                    <div *ngIf=\"f.continent.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.continent.errors.required\">{{this.fieldLabelen.continent}} is required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.descendant}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"descendant\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.descendant.errors && f.descendant.touched }\" />\n                    <div *ngIf=\"f.descendant.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.descendant.errors.required\">{{this.fieldLabelen.descendant}} is required</div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label>{{this.fieldLabelen.Education_level}}<span class=\"text-danger\">*</span></label>\n                <select formControlName=\"Education_level\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': f.Education_level.errors && f.Education_level.touched }\">\n                    <option *ngFor=\"let data of educationalOption\" value=\"{{data.value}}\">{{data.text}}</option>\n                </select>\n                <div *ngIf=\"f.Education_level.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.Education_level.errors.required\">{{this.fieldLabelen.Education_level}} is required\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.email}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.email.errors && f.email.touched }\" />\n                    <div *ngIf=\"f.email.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.email.errors.required\">{{this.fieldLabelen.email}} is required</div>\n                        <div *ngIf=\"f.email.errors.email\">{{this.fieldLabelen.email}} is not valid\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.fb}}</label>\n                    <input type=\"text\" formControlName=\"fb\" class=\"form-control\" />\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.twitter}}</label>\n                    <input type=\"text\" formControlName=\"twitter\" class=\"form-control\" />\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label>{{this.fieldLabelen.address}}<span class=\"text-danger\">*</span></label>\n                <input type=\"text\" formControlName=\"address\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': f.address.errors && f.address.touched }\" />\n                <div *ngIf=\"f.address.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.address.errors.required\">{{this.fieldLabelen.address}} is required</div>\n\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.town}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"town\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.town.errors && f.town.touched }\" />\n                    <div *ngIf=\"f.town.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.town.errors.required\">{{this.fieldLabelen.town}} is required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.state}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"state\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.state.errors && f.state.touched }\" />\n                    <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.state.errors.required\">{{this.fieldLabelen.state}} is required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-4 col-sm-12\">\n                    <label>{{this.fieldLabelen.postal_code}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"postal_code\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.postal_code.errors && f.postal_code.touched }\" />\n                    <div *ngIf=\"f.postal_code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.postal_code.errors.required\">{{this.fieldLabelen.postal_code}} is required</div>\n                        <div *ngIf=\"f.postal_code.errors.pattern\">{{this.fieldLabelen.postal_code}} is not valid\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.birth_place}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"birth_place\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.birth_place.errors && f.birth_place.touched }\" />\n                    <div *ngIf=\"f.birth_place.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.birth_place.errors.required\">{{this.fieldLabelen.birth_place}} is required</div>\n\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6 col-sm-12\">\n                    <label>{{this.fieldLabelen.birth_town}}<span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" formControlName=\"birth_town\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': f.birth_town.errors && f.birth_town.touched }\" />\n                    <div *ngIf=\"f.birth_town.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.birth_town.errors.required\">{{this.fieldLabelen.birth_town}} is required</div>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group boxview\">\n                <label>{{this.fieldLabelen.language_title}}</label>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">{{this.fieldLabelen.th_title}}</th>\n                            <th scope=\"col\">{{this.fieldLabelen.th_spoken}}</th>\n                            <th scope=\"col\">{{this.fieldLabelen.th_reading}}</th>\n                            <th scope=\"col\">{{this.fieldLabelen.th_writing}}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Malay</td>\n                            <td><select formControlName=\"malay_spoken\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"malay_reading\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"malay_writting\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>English</td>\n                            <td><select formControlName=\"eng_spoken\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"eng_reading\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"eng_writting\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Chinese</td>\n                            <td><select formControlName=\"chinees_spoken\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"chinees_reading\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"chinees_writting\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Tamil</td>\n                            <td><select formControlName=\"tamil_spoken\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"tamil_reading\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                            <td><select formControlName=\"tamil_writting\" class=\"form-control\">\n                                    <option value=\"none\">NA</option>\n                                    <option *ngFor=\"let data of proficiencyOption\" value=\"{{data.value}}\">{{data.text}}\n                                    </option>\n                                </select>\n\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"form-group boxview\">\n                <div class=\"form-row \">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.economic_type}}<span class=\"text-danger\">*</span></label>\n                        <select formControlName=\"economic_type\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': f.economic_type.errors && f.economic_type.touched }\">\n                            <option *ngFor=\"let data of typeOption\" value=\"{{data.value}}\">{{data.text}}\n                            </option>\n                        </select>\n                        <div *ngIf=\"f.economic_type.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.economic_type.errors.required\">{{this.fieldLabelen.economic_type}} is required\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.employee_position}}</label>\n                        <input type=\"text\" formControlName=\"employee_position\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.business_type}}</label>\n                        <input type=\"text\" formControlName=\"business_type\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.economic_Business_type}}</label>\n                        <input type=\"text\" formControlName=\"economic_Business_type\" class=\"form-control\" />\n                    </div>\n\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.income_gross}}<span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" formControlName=\"income_gross\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': f.income_gross.errors && f.income_gross.touched }\" />\n                        <div *ngIf=\"f.income_gross.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.income_gross.errors.required\">{{this.fieldLabelen.income_gross}} is required\n                            </div>\n                            <div *ngIf=\"f.income_gross.errors.pattern\">{{this.fieldLabelen.income_gross}} is not valid\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.income_net}}<span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" formControlName=\"income_net\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': f.income_net.errors && f.income_net.touched }\" />\n                        <div *ngIf=\"f.income_net.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.income_net.errors.required\">{{this.fieldLabelen.income_net}} is required</div>\n                            <div *ngIf=\"f.income_net.errors.pattern\">{{this.fieldLabelen.income_net}} is not valid\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12 col-sm-12\">\n                        <label>{{this.fieldLabelen.income_other}}<span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" formControlName=\"income_other\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': f.income_other.errors && f.income_other.touched }\" />\n                        <div *ngIf=\"f.income_other.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.income_other.errors.pattern\">{{this.fieldLabelen.income_other}} is not valid\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.monthly_expense}}<span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" formControlName=\"monthly_expense\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': f.monthly_expense.errors && f.monthly_expense.touched }\" />\n                        <div *ngIf=\"f.monthly_expense.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.monthly_expense.errors.required\">{{this.fieldLabelen.monthly_expense}} is\n                                required</div>\n                            <div *ngIf=\"f.monthly_expense.errors.pattern\">{{this.fieldLabelen.monthly_expense}} is not\n                                valid\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label>{{this.fieldLabelen.adequate_income}}<span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" formControlName=\"adequate_income\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': f.adequate_income.errors && f.adequate_income.touched }\" />\n                        <div *ngIf=\"f.adequate_income.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.adequate_income.errors.required\">{{this.fieldLabelen.adequate_income}} is\n                                required</div>\n                            <div *ngIf=\"f.adequate_income.errors.pattern\">{{this.fieldLabelen.adequate_income}} is not\n                                valid\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 \">\n                    <div class=\"boxview\">\n                        <label>{{this.fieldLabelen.status_title}}</label>\n                        <table class=\"table\">\n                            <tbody>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.health}}<span class=\"text-danger\">*</span></td>\n                                    <td><select formControlName=\"health\" class=\"form-control\"\n                                            [ngClass]=\"{ 'is-invalid': f.health.errors && f.health.touched }\">\n                                            <option *ngFor=\"let data of statusOption\" value=\"{{data.value}}\">\n                                                {{data.text}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"f.health.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.health.errors.required\">{{this.fieldLabelen.health}} is\n                                                required</div>\n\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.general_knowledge}}<span class=\"text-danger\">*</span></td>\n                                    <td><select formControlName=\"general_knowledge\" class=\"form-control\"\n                                            [ngClass]=\"{ 'is-invalid': f.general_knowledge.errors && f.general_knowledge.touched }\">\n                                            <option *ngFor=\"let data of statusOption\" value=\"{{data.value}}\">\n                                                {{data.text}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"f.general_knowledge.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.general_knowledge.errors.required\">\n                                                {{this.fieldLabelen.general_knowledge}} is required</div>\n\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.financial}}<span class=\"text-danger\">*</span></td>\n                                    <td><select formControlName=\"financial\" class=\"form-control\"\n                                            [ngClass]=\"{ 'is-invalid': f.financial.errors && f.financial.touched }\">\n                                            <option *ngFor=\"let data of statusOption\" value=\"{{data.value}}\">\n                                                {{data.text}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"f.financial.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.financial.errors.required\">{{this.fieldLabelen.financial}} is\n                                                required</div>\n\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.hapiness}}<span class=\"text-danger\">*</span></td>\n                                    <td><select formControlName=\"hapiness\" class=\"form-control\"\n                                            [ngClass]=\"{ 'is-invalid': f.hapiness.errors && f.hapiness.touched }\">\n                                            <option *ngFor=\"let data of statusOption\" value=\"{{data.value}}\">\n                                                {{data.text}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"f.hapiness.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.hapiness.errors.required\">{{this.fieldLabelen.hapiness}} is\n                                                required</div>\n\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.leadership}}<span class=\"text-danger\">*</span></td>\n                                    <td><select formControlName=\"leadership\" class=\"form-control\"\n                                            [ngClass]=\"{ 'is-invalid': f.leadership.errors && f.leadership.touched }\">\n                                            <option *ngFor=\"let data of statusOption\" value=\"{{data.value}}\">\n                                                {{data.text}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"f.leadership.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.leadership.errors.required\">{{this.fieldLabelen.leadership}}\n                                                is required</div>\n\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6 \">\n                    <div class=\"boxview\">\n                        <label>{{this.fieldLabelen.wish_title}}</label>\n                        <table class=\"table\">\n\n                            <tbody>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.wish_economic_type}}</td>\n                                    <td> <input type=\"text\" formControlName=\"wish_economic_type\" class=\"form-control\" />\n                                    </td>\n                                </tr>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.wish_income_mothly}}</td>\n                                    <td>\n                                        <input type=\"text\" formControlName=\"wish_income_mothly\" class=\"form-control\"\n                                            [ngClass]=\"{ 'is-invalid': f.wish_income_mothly.errors && f.wish_income_mothly.touched }\"\n                                            maxlength=\"12\" />\n                                        <div *ngIf=\"f.wish_income_mothly.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.wish_income_mothly.errors.pattern\">\n                                                {{this.fieldLabelen.wish_income_mothly}} is not valid\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>{{this.fieldLabelen.wish_type_business}}</td>\n                                    <td> <input type=\"text\" formControlName=\"wish_type_business\" class=\"form-control\" />\n                                    </td>\n                                </tr>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.wish_type_employment}}</td>\n                                    <td> <input type=\"text\" formControlName=\"wish_type_employment\"\n                                            class=\"form-control\" />\n                                    </td>\n                                </tr>\n                                <tr>\n                                <tr>\n\n                                    <td>{{this.fieldLabelen.wish_aim}}</td>\n                                    <td> <input type=\"text\" formControlName=\"wish_aim\" class=\"form-control\" /></td>\n                                </tr>\n                                <tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"text-center\">\n                <button class=\"btn btn-primary mr-1\" [disabled]=\"this.registerForm.invalid\"\n                    (click)=\"addMember()\">Register</button>\n                <button class=\"btn btn-secondary\" (click)=\"onReset()\">Cancel</button>\n            </div>\n        </form>\n    </div>\n</section>\n\n<section>\n    <ng-template #confirmation let-c=\"close\" let-d=\"dismiss\">\n        <div class=\"modal-header\">\n            Thank you for registering with AKUC\n        </div>\n        <div class=\"modal-body\">\n            You have been successfully registered as member of AKUC, you will be notified in the registered mobile\n            number\n        </div>\n        <div class=\"modal-footer\">\n            <button class=\"btn btn-primary btn-custom\" (click)=\"redirectToReg()\">Thankyou</button>\n        </div>\n\n    </ng-template>\n</section>","import { Injectable } from '@angular/core';\nimport { ApiServiceService } from 'src/app/shared/service/api-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembershipService {\n\n  constructor(private apiService: ApiServiceService) { }\n\n  public addmember(postParams){\n    return this.apiService.post('registeruser', postParams);\n  }\n\n  // public deletemember(postParams){\n  //   return this.apiService.delete('registeruser', postParams);\n  // }\n\n  // public exportExcel(postParams){\n  //   return this.apiService.post('customer/customerlistexcel', postParams);\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-view',\n  templateUrl: './register-view.component.html',\n  styleUrls: ['./register-view.component.scss']\n})\nexport class RegisterViewComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public memberform() {\n    this.router.navigate(['/register/member']);\n  }\n\n  public consumerform() {\n    this.router.navigate(['/register/consumer']);\n  }\n\n}\n","<section>\n    <div class=\"page_banner\">\n        <div class=\"container\">\n            <h2>Registration</h2>\n        </div>\n    </div>\n</section>\n<section class=\"registration\">\n    <div class=\"container\">\n        <div class=\"row our_concept\">\n            <div class=\"col-md-6 col-xs-12 mb-4\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4>AKUC MEMBERSHIP</h4>\n                        <button (click)=\"memberform()\" class=\"btn btn-primary btn-custom\">Register Now</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 col-xs-12 mb-4\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4>Become a Consumer</h4>\n                        <button (click)=\"consumerform()\" class=\"btn btn-primary btn-custom\">Register Now</button>\n\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MembershipComponent } from './membership/membership.component';\r\nimport { RegisterViewComponent } from './register-view/register-view.component';\r\nimport { ConsumerComponent } from './consumer/consumer.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterViewComponent,\r\n  },\r\n  {\r\n    path: 'member',\r\n    component: MembershipComponent\r\n  },\r\n  {\r\n    path: 'consumer',\r\n    component: ConsumerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegistrationRoutingModule { }\r\n","import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MembershipComponent } from './membership/membership.component';\nimport { RegistrationRoutingModule } from './registration-routing.module';\nimport { ConsumerComponent } from './consumer/consumer.component';\nimport { RegisterViewComponent } from './register-view/register-view.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [MembershipComponent, ConsumerComponent, RegisterViewComponent],\n  imports: [\n    CommonModule,\n    RegistrationRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    HttpClientModule,\n    FormsModule,\n    NgxSpinnerModule,\n  ]\n})\nexport class RegistrationModule {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiServiceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private setHeaders() {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n       // 'Authorization': 'Bearer '+token\r\n      })\r\n    };\r\n    return httpOptions;\r\n  }\r\n\r\n//   private setPostHeaders() {\r\n//     const token = this.jwtService.getRawToken();\r\n//     const httpOptions = {\r\n//       headers: new HttpHeaders({\r\n//        // 'Content-Type': \"application/json\",\r\n//         'Authorization': 'Bearer '+token\r\n//       })\r\n//     };\r\n//     return httpOptions;\r\n//   }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side or network error occurred.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    return throwError(\r\n      `${JSON.stringify(error.error.error)}`\r\n    );\r\n  }\r\n\r\n  get(pathUrl) {\r\n\r\n    return this.http.get(`${environment.apiUrl}${pathUrl}`, this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  // tslint:disable-next-line: ban-types\r\n  post(postUrl, body: Object) {\r\n    return this.http.post(`${environment.apiUrl}${postUrl}`, JSON.stringify(body), this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  delete(delUrl) {\r\n    return this.http.delete(`${environment.apiUrl}${delUrl}`, this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  // tslint:disable-next-line: ban-types\r\n  put(putUrl, body: Object) {\r\n    return this.http.put(`${environment.apiUrl}${putUrl}`, JSON.stringify(body), this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n//   postFile(postUrl, body: any) {\r\n//     return this.http.post(`${environment.apiUrl}${postUrl}`, body, this.setPostHeaders() )\r\n//       .pipe(\r\n//         catchError(this.handleError)\r\n//       );\r\n//   }\r\n  /****************The below can be used if the entire http response is required to pass to component**************************/\r\n  // getConfigResponse(): Observable<HttpResponse<any>> {\r\n  //   return this.http.get<any>(\r\n  //     this.configUrl, { observe: 'response' })\r\n  //     .pipe(\r\n  //       catchError(this.handleError)\r\n  //     );\r\n  // }\r\n}\r\n"]}