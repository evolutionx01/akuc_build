{"version":3,"sources":["./src/app/auth/jwt.service.ts","./src/app/broad-cast/broad-cast-routing.module.ts","./src/app/broad-cast/broad-cast-view/broad-cast-view.component.ts","./src/app/broad-cast/broad-cast-view/broad-cast-view.component.html","./src/app/broad-cast/broad-cast-view/broad-cast-view.service.ts","./src/app/broad-cast/broad-cast.module.ts","./src/app/shared/service/api-service.service.ts"],"names":[],"mappings":"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","file":"broad-cast-broad-cast-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n\r\n  constructor() { }\r\n\r\n  setToken(token: string) {\r\n    sessionStorage.setItem('token', JSON.stringify(token));\r\n    return true;\r\n  }\r\n  getToken() {\r\n    const helper = new JwtHelperService();\r\n    const token = JSON.parse(sessionStorage.getItem('token'));\r\n    const decodedToken = helper.decodeToken(token);\r\n    return decodedToken;\r\n  }\r\n  getRawToken() {\r\n    return sessionStorage.getItem('token');\r\n  }\r\n}\r\n","import { BroadCastViewComponent } from './broad-cast-view/broad-cast-view.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BroadCastViewComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BroadCastRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {BroadCastViewService} from './broad-cast-view.service';\n\n@Component({\n  selector: 'app-broad-cast-view',\n  templateUrl: './broad-cast-view.component.html',\n  styleUrls: ['./broad-cast-view.component.scss']\n})\nexport class BroadCastViewComponent implements OnInit {\n  messageList: []\n  constructor(\n    private apiService: BroadCastViewService,\n    private spinner: NgxSpinnerService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getBroadcastMessages();\n  }\n\n  public getBroadcastMessages() {\n    this.spinner.show();\n    this.apiService.getMessages().subscribe(\n      data => {\n        this.messageDetails(data);\n      },\n      error => {\n        this.spinner.hide();\n        console.log(error);\n      }\n    );\n  }\n\n  private messageDetails(data) {\n    this.spinner.hide();\n    console.log(data);\n    if (data.statusCode === 200){\n      this.messageList = data.data;\n    }else{\n      this.messageList = [];\n    }\n  }\n\n}\n","<section id=\"top-section\">\n  <div class=\"page_banner\">\n    <div class=\"container\">\n      <h2>Broadcast Messages</h2>\n    </div>\n  </div>\n</section>\n\n<section class=\"broad-cast\">\n  <div class=\"mesgs\">\n    <div class=\"msg_history\">\n      <ng-container *ngFor=\"let item of messageList\" >\n      <div class=\"incoming_msg\" *ngIf=\"item.name === 'founder'\" >\n        <div class=\"incoming_msg_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\n        <div class=\"received_msg\">\n          <div class=\"received_withd_msg\">\n            <div *ngIf=\"item.file_type === 'image'\">\n              <img [src]=\"item.file\" />\n            </div>\n            <div *ngIf=\"item.file_type === 'audio'\">\n              <audio controls>\n                <source [src]=\"item.file\" type=\"audio/ogg\">\n                <source [src]=\"item.file\" type=\"audio/mpeg\">\n                Your browser does not support the audio element.\n              </audio>\n            </div>\n            <div *ngIf=\"item.file_type === 'video'\">\n              <video width=\"320\" height=\"240\" controls>\n                <source [src]=\"item.file\" type=\"video/mp4\">\n                <source [src]=\"item.file\" type=\"video/ogg\">\n                Your browser does not support the video tag.\n              </video>\n            </div>\n            <div *ngIf=\"item.message !== ''\">\n              <p>{{item.message}}</p>\n            </div>\n\n            <span class=\"time_date\"> {{item.publish_date | date: 'h:mm a'}}    |     {{item.publish_date | date: 'MMM d, y'}}</span></div>\n        </div>\n      </div>\n      <div class=\"outgoing_msg\" *ngIf=\"item.name !== 'founder'\">\n        <div class=\"sent_msg\">\n          <div *ngIf=\"item.file_type === 'image'\">\n            <img [src]=\"item.file\" />\n          </div>\n          <div *ngIf=\"item.file_type === 'audio'\">\n            <audio controls>\n              <source [src]=\"item.file\" type=\"audio/ogg\">\n              <source [src]=\"item.file\" type=\"audio/mpeg\">\n              Your browser does not support the audio element.\n            </audio>\n          </div>\n          <div *ngIf=\"item.file_type === 'video'\">\n            <video width=\"320\" height=\"240\" controls>\n              <source [src]=\"item.file\" type=\"video/mp4\">\n              <source [src]=\"item.file\" type=\"video/ogg\">\n              Your browser does not support the video tag.\n            </video>\n          </div>\n          <div *ngIf=\"item.message !== ''\">\n            <p>{{item.message}}</p>\n          </div>\n          <span class=\"time_date\"> {{item.publish_date | date: 'h:mm a'}}    |     {{item.publish_date | date: 'MMM d, y'}}</span> </div>\n      </div>\n      </ng-container>\n    </div>\n    <!--<div class=\"type_msg\">-->\n      <!--<div class=\"input_msg_write\">-->\n        <!--<input type=\"text\" class=\"write_msg\" placeholder=\"Type a message\" />-->\n        <!--<button class=\"msg_send_btn\" type=\"button\"><i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i></button>-->\n      <!--</div>-->\n    <!--</div>-->\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport {ApiServiceService} from '../../shared/service/api-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BroadCastViewService {\n\n  constructor(\n    private apiService: ApiServiceService\n  ) { }\n\n  public getMessages(){\n    return this.apiService.get('broadcast');\n  }\n}\n","import { BroadCastRoutingModule } from './broad-cast-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BroadCastViewComponent } from './broad-cast-view/broad-cast-view.component';\n\n\n\n@NgModule({\n  declarations: [BroadCastViewComponent],\n  imports: [\n    CommonModule,\n    BroadCastRoutingModule\n  ]\n})\nexport class BroadCastModule { }\n","import { JwtService } from './../../auth/jwt.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiServiceService {\r\n\r\n\r\n  constructor(private http: HttpClient, private jwtService: JwtService) { }\r\n\r\n  private setHeaders() {\r\n    const token = this.jwtService.getRawToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        // tslint:disable-next-line: object-literal-key-quotes\r\n        'Authorization': 'Bearer ' + token\r\n      })\r\n    };\r\n    return httpOptions;\r\n  }\r\n\r\n//   private setPostHeaders() {\r\n//     const token = this.jwtService.getRawToken();\r\n//     const httpOptions = {\r\n//       headers: new HttpHeaders({\r\n//        // 'Content-Type': \"application/json\",\r\n//         'Authorization': 'Bearer '+token\r\n//       })\r\n//     };\r\n//     return httpOptions;\r\n//   }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side or network error occurred.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    return throwError(\r\n      `${JSON.stringify(error.error.error)}`\r\n    );\r\n  }\r\n\r\n  get(pathUrl) {\r\n\r\n    return this.http.get(`${environment.apiUrl}${pathUrl}`, this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  // tslint:disable-next-line: ban-types\r\n  post(postUrl, body: Object) {\r\n    return this.http.post(`${environment.apiUrl}${postUrl}`, JSON.stringify(body), this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  delete(delUrl) {\r\n    return this.http.delete(`${environment.apiUrl}${delUrl}`, this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  // tslint:disable-next-line: ban-types\r\n  put(putUrl, body: Object) {\r\n    return this.http.put(`${environment.apiUrl}${putUrl}`, JSON.stringify(body), this.setHeaders())\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n//   postFile(postUrl, body: any) {\r\n//     return this.http.post(`${environment.apiUrl}${postUrl}`, body, this.setPostHeaders() )\r\n//       .pipe(\r\n//         catchError(this.handleError)\r\n//       );\r\n//   }\r\n  /****************The below can be used if the entire http response is required to pass to component**************************/\r\n  // getConfigResponse(): Observable<HttpResponse<any>> {\r\n  //   return this.http.get<any>(\r\n  //     this.configUrl, { observe: 'response' })\r\n  //     .pipe(\r\n  //       catchError(this.handleError)\r\n  //     );\r\n  // }\r\n}\r\n"],"sourceRoot":"webpack:///"}